# This workflow will build and push a new container image to Alibaba Cloud Container Registry (ACR),
# and then will deploy it to Alibaba Cloud Container Service for Kubernetes (ACK), when there is a push to the "main" branch.
#
# To use this workflow, you will need to complete the following set-up steps:
#
# 1. Create an ACR repository to store your container images.
#    You can use ACR EE instance for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/142168.htm
#
# 2. Create an ACK cluster to run your containerized application.
#    You can use ACK Pro cluster for more security and better performance.
#    For instructions see https://www.alibabacloud.com/help/doc-detail/95108.htm
#
# 3. Store your AccessKey pair in GitHub Actions secrets named `ACCESS_KEY_ID` and `ACCESS_KEY_SECRET`.
#    For instructions on setting up secrets see: https://developer.github.com/actions/managing-workflows/storing-secrets/
#
# 4. Change the values for the REGION_ID, REGISTRY, NAMESPACE, IMAGE, ACK_CLUSTER_ID, and ACK_DEPLOYMENT_NAME.
#

name: Build and Deploy to ACK

on:
  push:
    branches: [ "main" ]

# Environment variables available to all jobs and steps in this workflow.
env:
  SOURCE_REGISTRY_USERNAME: rensheng.yang@windriver.com
  DESTINATION_REGISTRY_USERNAME: confucian_tju@hotmail.com
  SOURCE_REGISTRY_PASSWORD: dckr_pat_P6ZCB3hz3Z4SiQP4-tw4qmKWF50
  DESTINATION_REGISTRY_PASSWORD: Yrs@201202  

jobs:
  build:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
      uses: docker/login-action@v3.3.0
      with:
        # Username used to log against the Docker registry
        username: rensheng.yang@windriver.com
        # Password or personal access token used to log against the Docker registry
        password: dckr_pat_P6ZCB3hz3Z4SiQP4-tw4qmKWF50
                  

    - name: Docker Image Transfer
      uses: alex289/docker-image-transfer-action@v1.0.0
      with:
        source: 'registry.docker.io/elxrlinux/elxr:12.6.1.0-distroless-python'
        destination: 'registry.cn-hangzhou.aliyuncs.com/ryang-test/elxrlinux/elxr:12.6.1.0-distroless-python'

        

